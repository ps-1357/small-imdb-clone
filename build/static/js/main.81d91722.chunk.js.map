{"version":3,"sources":["components/Movies.js","components/Admin.js","images/movie_tickets.jpg","components/Home.js","components/OneMovie.js","components/Genres.js","components/OneGenre.js","components/form-components/Input.js","components/form-components/Select.js","components/form-components/TextArea.js","components/ui-components/Alert.js","components/EditMovie.js","components/Login.js","App.js","index.js"],"names":["Movies","state","movies","isLoaded","error","fetch","process","then","response","status","err","Error","message","setState","json","this","className","map","m","to","id","title","Component","Admin","props","jwt","history","push","pathname","Home","src","Ticket","alt","OneMovie","movie","match","params","genres","Object","values","year","mpaa_rating","index","description","runtime","Genres","genreName","genre_name","OneGenre","location","Input","htmlFor","name","type","value","onChange","handleChange","placeholder","errorDiv","errorMsg","Select","options","option","label","TextArea","rows","Alert","alertType","role","alertMessage","EditMovie","handleSubmit","evt","preventDefault","errors","length","data","FormData","target","payload","fromEntries","entries","myHeaders","Headers","append","requestOptions","method","body","JSON","stringify","headers","alert","prevState","confirmDelete","e","console","log","confirmAlert","buttons","onClick","release_date","rating","mpaaOptions","bind","releaseDate","Date","toISOString","split","key","indexOf","onSubmit","hasError","href","Login","email","password","handleJWTChange","window","localStorage","setItem","App","logout","removeItem","t","getItem","parse","loginLink","path","component","exact","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.81d91722.chunk.js","sourcesContent":["import React, { Component, Fragment } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nexport default class Movies extends Component {\n  state = {\n    movies: [],\n    isLoaded: false,\n    error: null,\n  };\n\n  componentDidMount() {\n    fetch(`${process.env.REACT_APP_API_URL}/v1/movies`)\n      .then((response) => {\n        if (response.status !== \"200\") {\n          let err = Error;\n          err.message = \"Invalid response code: \" + response.status;\n          this.setState({ error: err });\n        }\n        return response.json();\n      })\n      .then((json) => {\n        this.setState(\n          {\n            movies: json.movies,\n            isLoaded: true,\n          },\n          (error) => {\n            this.setState({\n              isLoaded: true,\n              error,\n            });\n          }\n        );\n      });\n  }\n\n  render() {\n    const { movies, isLoaded, error } = this.state;\n    if (error) {\n      return <div>Error: {error.message}</div>;\n    } else if (!isLoaded) {\n      return <p>Loading...</p>;\n    } else {\n      return (\n        <Fragment>\n          <h2>Choose a movie</h2>\n\n          <div className=\"list-group\">\n            {movies.map((m) => (\n              <Link\n                key={m.id}\n                className=\"list-group-item list-group-item-action\"\n                to={`/movies/${m.id}`}\n              >\n                {m.title}\n              </Link>\n            ))}\n          </div>\n        </Fragment>\n      );\n    }\n  }\n}\n","import React, { Component, Fragment } from 'react'\nimport { Link } from 'react-router-dom'\n\nexport default class Admin extends Component {\n    \n    state = {\n        movies: [],\n        isLoaded: false,\n        error: null,\n      };\n      \n    \n      componentDidMount() {\n\n        if (this.props.jwt === \"\") {\n            this.props.history.push({\n              pathname: \"/login\",\n            });\n            return;\n          }\n        fetch(`${process.env.REACT_APP_API_URL}/v1/movies`)\n          .then((response) => {\n            if (response.status !== \"200\") {\n              let err = Error;\n              err.message = \"Invalid response code: \" + response.status;\n              this.setState({ error: err });\n            }\n            return response.json();\n          })\n          .then((json) => {\n            this.setState(\n              {\n                movies: json.movies,\n                isLoaded: true,\n              },\n              (error) => {\n                this.setState({\n                  isLoaded: true,\n                  error,\n                });\n              }\n            );\n          });\n      }\n    \n      render() {\n        const { movies, isLoaded, error } = this.state;\n        if (error) {\n          return <div>Error: {error.message}</div>;\n        } else if (!isLoaded) {\n          return <p>Loading...</p>;\n        } else {\n          return (\n            <Fragment>\n              <h2>Manage Catalogue</h2>\n              <hr/>\n              <div className=\"list-group\">\n                {movies.map((m) => (\n                  <Link\n                    key={m.id}\n                    className=\"list-group-item list-group-item-action\"\n                    to={`/admin/movie/${m.id}`}\n                  >\n                    {m.title}\n                  </Link>\n                ))}\n              </div>\n            </Fragment>\n          );\n        }\n      }\n}","export default __webpack_public_path__ + \"static/media/movie_tickets.8bbaed34.jpg\";","import React, { Component } from 'react';\nimport Ticket from './../images/movie_tickets.jpg'\nimport \"./home.css\"\n\nexport default class Home extends Component {\n\n    render() {\n        return (\n            <div className=\"text-center\">\n                <h2>This is the home page</h2>\n                <hr/>\n                <img src={Ticket} alt=\"movie ticket\"/>\n                <hr/>\n                <div className=\"tickets\"/>\n            </div>\n            \n        );\n    }\n}\n","import React, { Component, Fragment } from \"react\";\n\nexport default class OneMovie extends Component {\n  state = { movie: {}, isLoaded: false, error: null };\n\n  componentDidMount() {\n    fetch(`${process.env.REACT_APP_API_URL}/v1/movie/` + this.props.match.params.id)\n      .then((response) => {\n        if (response.status !== \"200\") {\n          let err = Error;\n          err.message = \"Invalid response code: \" + response.status;\n          this.setState({ error: err });\n        }\n        return response.json();\n      })\n      .then((json) => {\n        this.setState(\n          {\n            movie: json.movie,\n            isLoaded: true,\n          },\n          (error) => {\n            this.setState({\n              isLoaded: true,\n              error,\n            });\n          }\n        );\n      });\n  }\n\n  render() {\n    const { movie, isLoaded, error } = this.state;\n    if (movie.genres) {\n        movie.genres = Object.values(movie.genres);\n    } else {\n        movie.genres = [];\n    }\n\n    if (error) {\n      return <div>Error: {error.message}</div>;\n    } else if (!isLoaded) {\n      return <p>Loading...</p>;\n    } else {\n      return (\n        <Fragment>\n          <h2>\n            Movie: {movie.title} ({movie.year})\n          </h2>\n\n            <div className=\"float-start\">\n                <small>Rating: {movie.mpaa_rating}</small>\n            </div>\n            <div className=\"float-end\">\n                {movie.genres.map((m, index) =>(\n                    <span className=\"badge bg-secondary me-1\" key={index}>\n                        {m}\n                    </span>\n                ))}\n            </div>\n            <div className=\"clearfix\"></div>\n\n            <hr />\n\n          <table className=\"table table-compact table-striped\">\n            <thead></thead>\n            <tbody>\n              <tr>\n                <td>\n                  <strong>Title:</strong>\n                </td>\n                <td>{movie.title}</td>\n              </tr>\n              <tr>\n                  <td><strong>Description:</strong></td>\n                  <td>{movie.description}</td>\n              </tr>\n              <tr>\n                <td>\n                  <strong>Run time:</strong>\n                </td>\n                <td>{movie.runtime} minutes</td>\n              </tr>\n            </tbody>\n          </table>\n        </Fragment>\n      );\n    }\n  }\n}\n","import React, { Component, Fragment } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nexport default class Genres extends Component {\n  state = {\n    genres: [],\n    isLoaded: false,\n    error: null,\n  };\n\n  componentDidMount() {\n    fetch(`${process.env.REACT_APP_API_URL}/v1/genres`)\n      .then((response) => {\n        if (response.status !== \"200\") {\n          let err = Error;\n          err.message = \"Invalid response code: \" + response.status;\n          this.setState({ error: err });\n        }\n        return response.json();\n      })\n      .then((json) => {\n        this.setState(\n          {\n            genres: json.genres,\n            isLoaded: true,\n          },\n          (error) => {\n            this.setState({\n              isLoaded: true,\n              error,\n            });\n          }\n        );\n      });\n  }\n\n  render() {\n    const { genres, isLoaded, error } = this.state;\n    if (error) {\n      return <div>Error: {error.message}</div>;\n    } else if (!isLoaded) {\n      return <p>Loading...</p>;\n    } else {\n      return (\n        <Fragment>\n          <h2>Genres</h2>\n\n          <div className=\"list-group\">\n            {genres.map((m) => (\n              <Link\n                key={m.id}\n                className=\"list-group-item list-group-item-action\"\n                to={{\n                  pathname: `/genre/${m.id}`,\n                  genreName: m.genre_name,\n                }}\n              >\n                {m.genre_name}\n              </Link>\n            ))}\n          </div>\n        </Fragment>\n      );\n    }\n  }\n}\n","import React, { Component, Fragment } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nexport default class OneGenre extends Component {\n  state = {\n    movies: [],\n    isLoaded: false,\n    error: null,\n    genreName: \"\",\n  };\n\n  componentDidMount() {\n    fetch(`${process.env.REACT_APP_API_URL}/v1/movies/` + this.props.match.params.id)\n      .then((response) => {\n        if (response.status !== \"200\") {\n          let err = Error;\n          err.message = \"Invalid response code: \" + response.status;\n          this.setState({ error: err });\n        }\n        return response.json();\n      })\n      .then((json) => {\n        this.setState(\n          {\n            movies: json.movies,\n            isLoaded: true,\n            genreName: this.props.location.genreName,\n          },\n          (error) => {\n            this.setState({\n              isLoaded: true,\n              error,\n            });\n          }\n        );\n      });\n  }\n\n  render() {\n    let { movies, isLoaded, error, genreName } = this.state;\n\n    if (!movies) {\n      movies = [];\n    }\n\n    if (error) {\n      return <div>Error: {error.message}</div>;\n    } else if (!isLoaded) {\n      return <p>Loading...</p>;\n    } else {\n      return (\n        <Fragment>\n          <h2>Genre: {genreName}</h2>\n\n          <div className=\"list-group\">\n            {movies.map((m) => (\n              <Link\n                key={m.id}\n                to={`/movies/${m.id}`}\n                className=\"list-group-item list-group-item-action\"\n              >\n                {m.title}\n              </Link>\n            ))}\n          </div>\n        </Fragment>\n      );\n    }\n  }\n}\n","const Input = (props) => {\n    return(\n        <div className=\"mb-3\">\n            <label htmlFor={props.name} className=\"form-label\">\n                {props.title}\n            </label>\n            <input\n            className={`form-control ${props.className}`}\n            type={props.type}\n            id={props.name}\n            name={props.name}\n            value={props.value}\n            onChange={props.handleChange}\n            placeholder={props.placeholder}\n            />\n            <div className={props.errorDiv}>{props.errorMsg}</div>\n        </div>\n    );\n}\n\nexport default Input;","const Select = (props) => {\n    return (\n        <div className=\"mb-3\">\n            <label htmlFor={props.name} className=\"form-label\">\n                {\" \"}\n                {props.title}{\" \"}\n            </label>\n        <select\n            className=\"form-select\"\n            name={props.name}\n            value={props.value}\n            onChange={props.handleChange}>\n                <option value=\"\">{props.placeholder}</option>\n                {props.options.map((option) => {\n                    return (\n                        <option \n                            className=\"form-select\"\n                            key={option.id}\n                            value={option.id}\n                            label={option.value}\n                            >\n                                {option.value}\n                            </option>\n                    )\n                })}\n        </select>\n        </div>\n    );\n};\n\nexport default Select;","const TextArea = (props) => {\n    return (\n        <div className=\"mb-3\">\n            <label htmlFor=\"description\" className=\"form-label\">\n                {props.title}\n            </label>\n            <textarea\n                className=\"form-control\"\n                id={props.name}\n                name={props.name}\n                value={props.value}\n                onChange={props.handleChange}\n                rows={props.rows}\n                />\n        </div>\n    );\n};\n\nexport default TextArea","const Alert = (props) => {\n    return(\n        <div className={`alert ${props.alertType}`} role=\"alert\">\n        {props.alertMessage}\n        </div>\n    );\n}\n\nexport default Alert; ","import React, { Component, Fragment } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"./EditMovie.css\";\nimport Input from \"./form-components/Input\";\nimport Select from \"./form-components/Select\";\nimport TextArea from \"./form-components/TextArea\";\nimport Alert from \"./ui-components/Alert\";\nimport { confirmAlert } from \"react-confirm-alert\";\nimport \"react-confirm-alert/src/react-confirm-alert.css\";\n\nexport default class EditMovie extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      movie: {\n        id: 0,\n        title: \"\",\n        release_date: \"\",\n        runtime: \"\",\n        mpaa_rating: \"\",\n        rating: \"\",\n        description: \"\",\n      },\n      mpaaOptions: [\n        { id: \"G\", value: \"G\" },\n        { id: \"PG\", value: \"PG\" },\n        { id: \"PG13\", value: \"PG13\" },\n        { id: \"R\", value: \"R\" },\n        { id: \"NC17\", value: \"NC17\" },\n      ],\n      isLoaded: false,\n      error: null,\n      errors: [],\n      alert: {\n        type: \"d-none\",\n        message: \"\",\n      },\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  componentDidMount() {\n    if (this.props.jwt === \"\") {\n      this.props.history.push({\n        pathname: \"/login\",\n      });\n      return;\n    }\n\n    const id = this.props.match.params.id;\n    if (id > 0) {\n      fetch(`${process.env.REACT_APP_API_URL}/v1/movie/` + id)\n        .then((response) => {\n          if (response.status !== \"200\") {\n            let err = Error;\n            err.message = \"Invalid response code: \" + response.status;\n            this.setState({ error: err });\n          }\n          return response.json();\n        })\n        .then((json) => {\n          const releaseDate = new Date(json.movie.release_date);\n\n          this.setState(\n            {\n              movie: {\n                id: id,\n                title: json.movie.title,\n                release_date: releaseDate.toISOString().split(\"T\")[0],\n                runtime: json.movie.runtime,\n                mpaa_rating: json.movie.mpaa_rating,\n                rating: json.movie.rating,\n                description: json.movie.description,\n              },\n              isLoaded: true,\n            },\n            (error) => {\n              this.setState({\n                isLoaded: true,\n                error,\n              });\n            }\n          );\n        });\n    } else {\n      this.setState({ isLoaded: true });\n    }\n  }\n\n  handleSubmit = (evt) => {\n    evt.preventDefault();\n    // do validation\n    let errors = [];\n    if (this.state.movie.title === \"\") {\n      errors.push(\"title\");\n    }\n\n    this.setState({ errors: errors });\n\n    if (errors.length > 0) {\n      return false;\n    }\n\n    // we passed, so post info\n    const data = new FormData(evt.target);\n    const payload = Object.fromEntries(data.entries());\n    const myHeaders = new Headers();\n    myHeaders.append(\"Content-Type\", \"application/json\");\n    myHeaders.append(\"Authorization\", \"Bearer \" + this.props.jwt);\n\n    const requestOptions = {\n      method: \"POST\",\n      body: JSON.stringify(payload),\n      headers: myHeaders,\n    };\n    fetch(`${process.env.REACT_APP_API_URL}/v1/admin/editmovie`, requestOptions)\n      .then((response) => response.json())\n      .then((data) => {\n        if (data.error) {\n          this.setState({\n            alert: { type: \"alert-danger\", message: data.error.message },\n          });\n        } else {\n            \n          this.props.history.push({\n            pathname: \"/admin\",\n          });\n        }\n      });\n  };\n\n  handleChange = (evt) => {\n    let value = evt.target.value;\n    let name = evt.target.name;\n    this.setState((prevState) => ({\n      movie: {\n        ...prevState.movie,\n        [name]: value,\n      },\n    }));\n  };\n\n  // *** add this\n  hasError(key) {\n    return this.state.errors.indexOf(key) !== -1;\n  }\n\n  confirmDelete = (e) => {\n    console.log(\"would delete id\", this.state.movie.id);\n\n    confirmAlert({\n      title: \"Delete Movie?\",\n      message: \"Are you sure?\",\n      buttons: [\n        {\n          label: \"Yes\",\n          onClick: () => {\n            // delete the movie\n            const myHeaders = new Headers();\n            myHeaders.append(\"Content-Type\", \"application.json\");\n            myHeaders.append(\"Authorization\", \"Bearer\" + this.props.jwt);\n\n            fetch(\n              `${process.env.REACT_APP_API_URL}/v1/admin/deletemovie/` +\n                this.state.movie.id,\n              { method: \"GET\",\n                headers: myHeaders\n             }\n            )\n              .then((response) => response.json)\n              .then((data) => {\n                if (data.error) {\n                  this.setState({\n                    alert: {\n                      type: \"alert-danger\",\n                      message: data.error.message,\n                    },\n                  });\n                } else {\n                  this.setState({\n                    alert: { type: \"alert-success\", message: \"Movie deleted!\" },\n                  });\n                  this.props.history.push({\n                    pathname: \"/admin\",\n                  });\n                }\n              });\n          },\n        },\n        {\n          label: \"No\",\n          onClick: () => {},\n        },\n      ],\n    });\n  };\n\n  render() {\n    let { movie, isLoaded, error } = this.state;\n    if (error) {\n      return <div>Error: {error.message}</div>;\n    } else if (!isLoaded) {\n      return <p>Loading...</p>;\n    } else {\n      return (\n        <Fragment>\n          <h2>Add/Edit Movie</h2>\n          <Alert\n            alertType={this.state.alert.type}\n            alertMessage={this.state.alert.message}\n          />\n          <hr />\n          <form onSubmit={this.handleSubmit}>\n            <input\n              type=\"hidden\"\n              name=\"id\"\n              id=\"id\"\n              value={movie.id}\n              onChange={this.handleChange}\n            />\n\n            <Input\n              title={\"Title\"}\n              className={this.hasError(\"title\") ? \"is-invalid\" : \"\"}\n              type={\"text\"}\n              name={\"title\"}\n              value={movie.title}\n              handleChange={this.handleChange}\n              errorDiv={this.hasError(\"title\") ? \"text-danger\" : \"d-none\"}\n              errorMsg={\"Please enter a title\"}\n            />\n\n            <Input\n              title={\"Release Date\"}\n              type={\"date\"}\n              name={\"release_date\"}\n              value={movie.release_date}\n              handleChange={this.handleChange}\n            />\n\n            <Input\n              title={\"Runtime\"}\n              type={\"text\"}\n              name={\"runtime\"}\n              value={movie.runtime}\n              handleChange={this.handleChange}\n            />\n\n            <Select\n              title={\"MPAA Rating\"}\n              name={\"mpaa_rating\"}\n              options={this.state.mpaaOptions}\n              value={movie.mpaa_rating}\n              handleChange={this.handleChange}\n              placeholder=\"Choose...\"\n            />\n\n            <Input\n              title={\"Rating\"}\n              type={\"text\"}\n              name={\"rating\"}\n              value={movie.rating}\n              handleChange={this.handleChange}\n            />\n\n            <TextArea\n              title={\"Description\"}\n              name={\"description\"}\n              value={movie.description}\n              rows={\"3\"}\n              handleChange={this.handleChange}\n            />\n\n            <hr />\n\n            <button className=\"btn btn-primary\">Save</button>\n            <Link to=\"/admin\" className=\"btn btn-warning ms-1\">\n              Cancel\n            </Link>\n            {movie.id > 0 && (\n              <a\n                href=\"#!\"\n                onClick={() => this.confirmDelete()}\n                className=\"btn btn-danger ms-1\"\n              >\n                Delete\n              </a>\n            )}\n          </form>\n        </Fragment>\n      );\n    }\n  }\n}","import React, { Component, Fragment } from \"react\";\nimport Input from \"./form-components/Input\";\nimport Alert from \"./ui-components/Alert\";\n\nexport default class Login extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      email: \"\",\n      password: \"\",\n      error: null,\n      errors: [],\n      alert: {\n        type: \"d-none\",\n        message: \"\",\n      },\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleChange = (evt) => {\n    let value = evt.target.value;\n    let name = evt.target.name;\n    this.setState((prevState) => ({\n      ...prevState,\n      [name]: value,\n    }));\n  };\n\n  handleSubmit = (evt) => {\n    evt.preventDefault();\n\n    let errors = [];\n\n    if (this.state.email === \"\") {\n        errors.push(\"email\");\n    }\n\n    if (this.state.password === \"\") {\n        errors.push(\"password\");\n    }\n\n    this.setState({errors: errors});\n\n    if (errors.length > 0) {\n        return false;\n    }\n\n    const data = new FormData(evt.target);\n    const payload = Object.fromEntries(data.entries());\n\n    const requestOptions = {\n        method: \"POST\",\n        body: JSON.stringify(payload),\n    }\n\n    fetch(`${process.env.REACT_APP_API_URL}/v1/signin`, requestOptions)\n        .then((response) => response.json())\n        .then((data) => {\n            if (data.error) {\n                this.setState({\n                    alert: {\n                        type: \"alert-danger\",\n                        message: data.error.message,\n                    }\n                })\n            } else {\n                console.log(data);\n                this.handleJWTChange(Object.values(data)[0]);\n                window.localStorage.setItem(\"jwt\", JSON.stringify(Object.values(data)[0]));\n                this.props.history.push({\n                    pathname: \"/admin\",\n                })\n            }\n        })\n\n  };\n\n  handleJWTChange(jwt) {\n      this.props.handleJWTChange(jwt);\n  }\n\n  hasError(key) {\n    return this.state.errors.indexOf(key) !== -1;\n  }\n\n  render() {\n    return (\n      <Fragment>\n        <h2>Login</h2>\n        <hr />\n        <Alert\n          alertType={this.state.alert.type}\n          alertMessage={this.state.alert.message}\n        />\n\n        <form className=\"pt-3\" onSubmit={this.handleSubmit}>\n          <Input\n            title={\"Email\"}\n            type={\"email\"}\n            name={\"email\"}\n            handleChange={this.handleChange}\n            className={this.hasError(\"email\") ? \"is-invalid\" : \"\"}\n            errorDiv={this.hasError(\"email\") ? \"text-danger\" : \"d-none\"}\n            errorMsg={\"Please enter a valid email address\"}\n          />\n\n          <Input\n            title={\"Password\"}\n            type={\"password\"}\n            name={\"password\"}\n            handleChange={this.handleChange}\n            className={this.hasError(\"password\") ? \"is-invalid\" : \"\"}\n            errorDiv={this.hasError(\"password\") ? \"text-danger\" : \"d-none\"}\n            errorMsg={\"Please enter a password\"}\n          />\n\n          <hr />\n          <button className=\"btn btn-primary\">Login</button>\n        </form>\n      </Fragment>\n    );\n  }\n}","import React, { Component, Fragment } from 'react';\nimport {BrowserRouter as Router, Switch, Route, Link} from 'react-router-dom';\nimport Movies from './components/Movies';\nimport Admin from './components/Admin';\nimport Home from './components/Home';\nimport OneMovie from './components/OneMovie';\nimport Genres from './components/Genres';\nimport OneGenre from './components/OneGenre';\nimport EditMovie from './components/EditMovie';\nimport Login from \"./components/Login\"\n\n\n\nexport default class App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      jwt: \"\",\n    }\n    this.handleJWTChange(this.handleJWTChange.bind(this));\n  }\n  componentDidMount() {\n    let t = window.localStorage.getItem(\"jwt\");\n    if(t) {\n      if (this.state.jwt === \"\") {\n        this.setState({jwt: JSON.parse(t)});\n      }\n    }\n  }\n\n  handleJWTChange = (jwt) => {\n    this.setState({jwt:jwt});\n  }\n\n  logout = () => {\n    this.setState({jwt: \"\"});\n    window.localStorage.removeItem(\"jwt\");\n  }\n\n  render() {\n    let loginLink;\n    if (this.state.jwt === \"\") {\n      loginLink = <Link to=\"/login\">Login</Link>\n    } else {\n      loginLink = <Link to=\"/logout\" onClick={this.logout}>Logout</Link>\n    }\n    return (\n    <Router>\n    <div className=\"container\">\n\n      <div className=\"row\">\n        <div className=\"col mt-3\">\n        <h1 className=\"mt-3\">\n          Go Watch a Movie!\n        </h1>\n        </div>\n        <div className=\"col mt-3 text-end\">\n          {loginLink}\n        </div>\n        <hr className=\"mb-3\"></hr>\n      </div>\n\n      <div className=\"row\">\n        <div className=\"col-md-2\">\n          <nav>\n            <ul className=\"list-group\">\n              <li className=\"list-group-item\">\n                <Link to=\"/\">Home</Link>\n              </li>\n              <li className=\"list-group-item\">\n                <Link to=\"/movies\">Movies</Link>\n              </li>\n              <li className=\"list-group-item\">\n                <Link to=\"/genres\">Genres</Link>\n              </li>\n              {this.state.jwt !== \"\" &&\n              <Fragment>\n              <li className=\"list-group-item\">\n                <Link to=\"/admin/movie/0\">Add movie</Link>\n              </li>\n              <li className=\"list-group-item\">\n                <Link to=\"/admin\">Manage Catalogue</Link>\n              </li>\n              </Fragment>\n              }\n            </ul>\n          </nav>\n        </div>\n\n        <div className=\"col-md-10\">\n          <Switch>\n            \n            <Route path=\"/movies/:id\" component={OneMovie} />\n\n            <Route path=\"/movies\">\n              <Movies />\n            </Route>\n\n            <Route path=\"/genre/:id\" component={OneGenre} />\n\n            <Route exact path=\"/login\" component={(props) => <Login{...props} handleJWTChange={this.handleJWTChange}/>}/>\n\n            <Route exact path=\"/genres\">\n              <Genres />\n            </Route>\n\n            <Route path=\"/admin/movie/:id\" component={(props) => (\n              <EditMovie {...props} jwt={this.state.jwt}/>\n              )}\n            />\n            <Route path=\"/admin\" component={(props) => (\n              <Admin {...props} jwt={this.state.jwt}/>\n              )}\n            >\n            </Route>\n            <Route path=\"/\">\n              <Home />\n            </Route>\n          </Switch>\n        </div>\n      </div>\n    </div>\n    </Router>\n  );\n  }\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}